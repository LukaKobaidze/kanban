@mixin elementShowProps() {
  opacity: 1;

  &--top {
    transform: translateY(calc(-100% - var(--offset)));
  }

  &--right {
    transform: translateX(calc(var(--offset)));
  }

  &--bottom {
    transform: translateY(calc(100% + var(--offset)));
  }

  &--left {
    transform: translateX(calc(var(--offset) * -1));
  }
}

.wrapper {
  color: var(--clr-gray);
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;

  &--hover {
    & :first-child:hover + .element,
    & :first-child:focus-visible + .element {
      @include elementShowProps();
    }
  }

  &--show {
    .element {
      @include elementShowProps();
    }
  }
}

.element {
  --offset: 0; // gets via 'style' prop
  --pointer-size: 6px;
  --pointer-size-half: calc(var(--pointer-size) / 2);
  position: absolute;
  opacity: 0;
  background-color: var(--clr-dropdown);
  box-shadow: 0px 10px 20px rgba(54, 78, 126, 0.25);
  width: max-content;
  border-radius: 4px;
  padding: 4px 13px;
  transition: opacity 150ms, transform 150ms;
  text-align: center;

  &::before {
    content: '';
    width: var(--pointer-size);
    height: var(--pointer-size);
    position: absolute;
    border-radius: 2px;
    background-color: inherit;
    transform: rotate(45deg);
    z-index: -1;
  }

  &--top {
    top: calc(var(--pointer-size-half) * -1);
    transform: translateY(-100%);

    &::before {
      bottom: 0;
      left: 50%;
      transform: translate(-50%, 50%) rotate(45deg);
    }
  }

  &--right {
    left: calc(100% + var(--pointer-size-half));

    &::before {
      left: 0;
      top: 50%;
      transform: translate(-50%, -50%) rotate(45deg);
    }
  }

  &--bottom {
    bottom: calc(var(--pointer-size-half) * -1);
    transform: translateY(100%);

    &::before {
      top: 0;
      left: 50%;
      transform: translate(-50%, -50%) rotate(45deg);
    }
  }

  &--left {
    right: calc(100% + var(--pointer-size-half));

    &::before {
      right: 0;
      top: 50%;
      transform: translate(50%, -50%) rotate(45deg);
    }
  }

  &.disabled {
    pointer-events: none;
    user-select: none;
  }
}
